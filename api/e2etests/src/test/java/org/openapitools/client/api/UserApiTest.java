/*
 * Buzzchat server API
 * Instant Messaging App server API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aymane.menfaa@insa-rennes.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;
import okhttp3.OkHttpClient;
import org.apache.http.HttpStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.model.UserCredentialsDTO;
import org.openapitools.client.model.UserProfileDTO;
import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for UserApi
 */

public class UserApiTest {
  private final UserApi api = new UserApi();
  private final AuthenticationApi apiAuth = new AuthenticationApi();
  private final UserApi userapi = new UserApi();
  private MonCookieJar MonCookie;

  @BeforeEach
  public void init() {
    MonCookie = new MonCookieJar();
    OkHttpClient.Builder builder = new OkHttpClient.Builder();
    OkHttpClient okHttpClient = builder.cookieJar(MonCookie).build();
    ApiClient apiClient = new ApiClient(okHttpClient);
    apiAuth.setApiClient(apiClient);
    api.setApiClient(apiClient);
  }

  /**
   * Delete a user
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void deleteTest() throws ApiException {
    String login = "h";
    apiAuth.signup(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    apiAuth.signin(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    api.delete(login);
    try {
      apiAuth.signin(new UserCredentialsDTO()
        .login("h")
        .photo("assets/photo.jpg")
        .nom("h")
        .prenom("h")
        .email("h@buzzchat.com")
        .dateDeNaissance("26/02/2002")
        .password("h")
      );
      Assertions.fail();
    }
    catch (ApiException e) {
      assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getCode());
    }
  }

  /**
   * Get the username of the current user
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getUserNameTest() throws ApiException {
    apiAuth.signup(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    apiAuth.signin(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    String response = api.getUserName();
    assertEquals("h", response);
    userapi.delete("h");
  }

  /**
   * Get user status
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getUserStatusTest() throws ApiException {
    apiAuth.signup(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    apiAuth.signin(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    String login = "h";
    String response = api.getUserStatus(login);
    assertEquals(null, response);
    api.delete(login);
  }

  /**
   * Get the profile of the current user
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void profileTest() throws ApiException {
    apiAuth.signup(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    apiAuth.signin(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    UserProfileDTO u = new UserProfileDTO();
    u.setLogin("h");
    UserProfileDTO response = api.profile();
    assertEquals("h", u.getLogin());
    userapi.delete("h");
  }

  /**
   * Update user status
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void updateStatusTest() throws ApiException {
    apiAuth.signup(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    apiAuth.signin(new UserCredentialsDTO()
      .login("h")
      .photo("assets/photo.jpg")
      .nom("h")
      .prenom("h")
      .email("h@buzzchat.com")
      .dateDeNaissance("26/02/2002")
      .password("h")
    );

    String login = "h";
    String status = "online";
    String response = api.updateStatus(login, status);
    assertEquals("{" + "\"message\": " + "\"Status updated successfully\"" + "}", response);
    String status_updated = api.getUserStatus(login);
    assertEquals("online", status_updated);
    userapi.delete("h");
  }
}
