/*
 * Buzzchat server API
 * Instant Messaging App server API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: aymane.menfaa@insa-rennes.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;
import okhttp3.OkHttpClient;
import org.apache.http.HttpStatus;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.model.ResponseEntity;
import org.openapitools.client.model.UserCredentialsDTO;
import org.openapitools.client.model.UserProfileDTO;
import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for ConversationApi
 */

public class ConversationApiTest {
  private final ConversationApi api = new ConversationApi();
  private final AuthenticationApi apiAuth = new AuthenticationApi();
  private final UserApi userapi = new UserApi();
  private MonCookieJar MonCookie;
  private UserCredentialsDTO user1 = new UserCredentialsDTO()
    .login("aymane")
    .password("pwd")
    .email("aymane@buzzchat.com")
    .dateDeNaissance("26/02/2002")
    .prenom("Aymane")
    .nom("Menfaa")
    .photo("assets/photo.png");
  private UserCredentialsDTO user2 = new UserCredentialsDTO()
    .login("hamza")
    .password("pwd")
    .email("hamza@buzzchat.com")
    .dateDeNaissance("26/02/2002")
    .prenom("Hamza")
    .nom("Azer")
    .photo("assets/photo.png");

  @BeforeEach
  public void init() {
    MonCookie = new MonCookieJar();
    OkHttpClient.Builder builder = new OkHttpClient.Builder();
    OkHttpClient okHttpClient = builder.cookieJar(MonCookie).build();
    ApiClient apiClient = new ApiClient(okHttpClient);
    apiAuth.setApiClient(apiClient);
    api.setApiClient(apiClient);
  }

  /**
   * Create a new conversation
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void addConversationTest() throws ApiException {
    apiAuth.signup(user1);
    apiAuth.signin(user1);

    try {
      UserProfileDTO u1 = new UserProfileDTO();
      u1.setLogin(user1.getLogin());
      api.addConversation(u1);
      Assertions.fail();
    }
    catch (ApiException e) {
      assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getCode());
    }

    userapi.delete("aymane");
  }

  /**
   * Get all conversations of the current user
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getAllConversationsOfUserTest() throws ApiException {
    apiAuth.signup(user1);
    apiAuth.signin(user1);
    try {
      ResponseEntity response = api.getAllConversationsOfUser();
      Assertions.fail();
    }
    catch (ApiException e) {
      assertEquals(HttpStatus.SC_UNAUTHORIZED, e.getCode());
    }
    userapi.delete("aymane");
  }
}


